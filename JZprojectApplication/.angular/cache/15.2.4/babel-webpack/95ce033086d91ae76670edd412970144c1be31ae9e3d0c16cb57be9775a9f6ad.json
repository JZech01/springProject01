{"ast":null,"code":"import { User } from 'src/app/models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = new User();\n    this.username = '';\n    this.password = '';\n  }\n  ngOnInit() {\n    console.log(\"username: \" + this.username);\n    console.log(\"password: \" + this.password);\n  }\n  login() {\n    this.userService.login(this.username, this.password).subscribe(response => {\n      console.log('response received');\n      this.user = response;\n    });\n    console.log(\"username: \" + this.username);\n    console.log(\"password: \" + this.password);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 29,\n  vars: 2,\n  consts: [[\"routerLink\", \"/\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [1, \"container\"], [\"type\", \"text\", \"placeholder\", \"Enter Username\", \"name\", \"username\", \"required\", \"\"], [\"type\", \"password\", \"placeholder\", \"Enter Password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\"], [\"type\", \"checkbox\", \"checked\", \"checked\"], [\"type\", \"button\", 1, \"cancelbtn\"], [\"href\", \"#\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\", 0);\n      i0.ɵɵtext(1, \"homepage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_4_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(5, \"login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"html\")(7, \"head\");\n      i0.ɵɵelement(8, \"meta\", 3);\n      i0.ɵɵelementStart(9, \"title\");\n      i0.ɵɵtext(10, \" Login Page \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"body\")(12, \"form\")(13, \"div\", 4)(14, \"label\");\n      i0.ɵɵtext(15, \"Username : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 5);\n      i0.ɵɵelementStart(17, \"label\");\n      i0.ɵɵtext(18, \"Password : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵelementStart(20, \"button\", 7);\n      i0.ɵɵtext(21, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 8);\n      i0.ɵɵtext(23, \" Remember me \");\n      i0.ɵɵelementStart(24, \"button\", 9);\n      i0.ɵɵtext(25, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \" Forgot \");\n      i0.ɵɵelementStart(27, \"a\", 10);\n      i0.ɵɵtext(28, \" password? \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"Body[_ngcontent-%COMP%] {  \\n  font-family: Calibri, Helvetica, sans-serif;  \\n  background-color: pink;  \\n}  \\nbutton[_ngcontent-%COMP%] {   \\n       background-color: #4CAF50;   \\n       width: 100%;  \\n        color: orange;   \\n        padding: 15px;   \\n        margin: 10px 0px;   \\n        border: none;   \\n        cursor: pointer;   \\n         }   \\n form[_ngcontent-%COMP%] {   \\n        border: 3px solid #f1f1f1;   \\n    }   \\n input[type=text][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%] {   \\n        width: 100%;   \\n        margin: 8px 0;  \\n        padding: 12px 20px;   \\n        display: inline-block;   \\n        border: 2px solid green;   \\n        box-sizing: border-box;   \\n    }  \\n button[_ngcontent-%COMP%]:hover {   \\n        opacity: 0.7;   \\n    }   \\n  .cancelbtn[_ngcontent-%COMP%] {   \\n        width: auto;   \\n        padding: 10px 18px;  \\n        margin: 10px 5px;  \\n    }   \\n        \\n     \\n .container[_ngcontent-%COMP%] {   \\n        padding: 25px;   \\n        background-color: lightblue;  \\n    }\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,qBAAqB;;;;;AAQ1C,OAAM,MAAOC,cAAc;EAO3BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAL/B,SAAI,GAAU,IAAIH,IAAI,EAAE;IAExB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAIrB;EAEAI,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACC,QAAQ,CAAC;IACzCF,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACE,QAAQ,CAAC;EAC3C;EAEAC,KAAK;IACH,IAAI,CAACN,WAAW,CAACM,KAAK,CAAC,IAAI,CAACF,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACE,SAAS,CAAEC,QAAc,IAAI;MAChFN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC,IAAI,CAACM,IAAI,GAAGD,QAAQ;IACtB,CAAC,CAAC;IACFN,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACC,QAAQ,CAAC;IACzCF,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACE,QAAQ,CAAC;EAE3C;;AAxBaP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,4BAAkB;MAAAA,wBAAQ;MAAAA,iBAAI;MAG9BA,gCAA2C;MAAxBA;QAAA;MAAA,EAAsB;MAAzCA,iBAA2C;MAC3CA,gCAA2C;MAAxBA;QAAA;MAAA,EAAsB;MAAzCA,iBAA2C;MAC3CA,iCAA0B;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,qBAAK;MAAAA,iBAAS;MAGxCA,4BAAM;MAENA,0BAAoE;MACpEA,6BAAO;MAACA,6BAAW;MAAAA,iBAAQ;MA0C3BA,6BAAM;MAGaA,4BAAW;MAAAA,iBAAQ;MAC1BA,4BAAyE;MACzEA,8BAAO;MAAAA,4BAAW;MAAAA,iBAAQ;MAC1BA,4BAA6E;MAC7EA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;MACpCA,4BAAyC;MAACA,8BAC1C;MAAAA,kCAAwC;MAACA,wBAAM;MAAAA,iBAAS;MACxDA,yBAAO;MAAAA,8BAAY;MAACA,4BAAU;MAAAA,iBAAI;;;MA5D3BA,eAAsB;MAAtBA,sCAAsB;MACtBA,eAAsB;MAAtBA,sCAAsB","names":["User","LoginComponent","constructor","userService","ngOnInit","console","log","username","password","login","subscribe","response","user","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\JZproject\\JZprojectApplication\\JZproject\\src\\app\\components\\login\\login.component.ts","C:\\JZproject\\JZprojectApplication\\JZproject\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\nuser: User =  new User();\n\nusername: string = '';\npassword: string = '';\n\nconstructor(private userService: UserService ) {\n\n}\n\nngOnInit() {\n  console.log(\"username: \" + this.username);\n  console.log(\"password: \" + this.password);\n}\n\nlogin(): void {\n  this.userService.login(this.username, this.password).subscribe((response: User) => {                          \n    console.log('response received')\n    this.user = response; \n  });\n  console.log(\"username: \" + this.username);\n  console.log(\"password: \" + this.password);\n\n}\n\n\n}\n\n","<p routerLink=\"/\">homepage</p>\n\n\n<input type=\"text\" [(ngModel)]=\"username\"/> \n<input type=\"text\" [(ngModel)]=\"password\"/> \n<button (click)=\"login()\">login</button>\n\n<!DOCTYPE html>   \n<html>   \n<head>  \n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">  \n<title> Login Page </title>  \n<style>   \nBody {  \n  font-family: Calibri, Helvetica, sans-serif;  \n  background-color: pink;  \n}  \nbutton {   \n       background-color: #4CAF50;   \n       width: 100%;  \n        color: orange;   \n        padding: 15px;   \n        margin: 10px 0px;   \n        border: none;   \n        cursor: pointer;   \n         }   \n form {   \n        border: 3px solid #f1f1f1;   \n    }   \n input[type=text], input[type=password] {   \n        width: 100%;   \n        margin: 8px 0;  \n        padding: 12px 20px;   \n        display: inline-block;   \n        border: 2px solid green;   \n        box-sizing: border-box;   \n    }  \n button:hover {   \n        opacity: 0.7;   \n    }   \n  .cancelbtn {   \n        width: auto;   \n        padding: 10px 18px;  \n        margin: 10px 5px;  \n    }   \n        \n     \n .container {   \n        padding: 25px;   \n        background-color: lightblue;  \n    }   \n</style>   \n</head>    \n<body>     \n    <form>  \n        <div class=\"container\">   \n            <label>Username : </label>   \n            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" required>  \n            <label>Password : </label>   \n            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required>  \n            <button type=\"submit\">Login</button>   \n            <input type=\"checkbox\" checked=\"checked\"> Remember me   \n            <button type=\"button\" class=\"cancelbtn\"> Cancel</button>   \n            Forgot <a href=\"#\"> password? </a>   \n        </div>   \n    </form>     \n</body>     \n</html>  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}